#!/usr/bin/python
import socket
import serial
import threading

# TCP server settings
TCP_HOST = '0.0.0.0'  # Listen on all interfaces
TCP_PORT = 1259

# Serial port settings
SERIAL_PORT = '/dev/ttyUSB0'  # Example serial port, change as needed
SERIAL_BAUDRATE = 9600

# Function to handle incoming TCP connections
def handle_client(conn, serial_port):
    while True:
        try:
            data = conn.recv(1024)
            if not data:
                break
            serial_port.write(data)
            print(f"TX: {data}")
        except Exception as e:
            print("Error:", e)
            break
    conn.close()

# Function to read data from serial port and send it to TCP client
def serial_to_tcp(serial_port, conn):
    while True:
        try:
            data = serial_port.read(serial_port.in_waiting)
            if data:
                print(f"RX: {data}")

                conn.sendall(data)
        except Exception as e:
            print("Error:", e)
            break
    conn.close()

# Initialize serial port
try:
    serial_port = serial.Serial(port=SERIAL_PORT, baudrate=SERIAL_BAUDRATE)
except serial.SerialException as e:
    print("Error opening serial port:", e)
    exit()

# Initialize TCP server socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
server_socket.bind((TCP_HOST, TCP_PORT))
server_socket.listen(1)

print("TCP to Serial Converter started. Listening on {}:{}".format(TCP_HOST, TCP_PORT))

try:
    while True:
        conn, addr = server_socket.accept()
        print("Client connected from:", addr)
        client_thread = threading.Thread(target=handle_client, args=(conn, serial_port))
        client_thread.daemon = True
        client_thread.start()
        
        serial_thread = threading.Thread(target=serial_to_tcp, args=(serial_port, conn))
        serial_thread.daemon = True
        serial_thread.start()
except KeyboardInterrupt:
    print("Keyboard Interrupt. Closing...")
finally:
    server_socket.close()
    serial_port.close()
